static bool compare(const vector<int> &v1,const vector<int> &v2)
    {
        return (v1[0]+v1[1]) < (v2[0]+v2[1]);
    }
    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
          int n=nums1.size(),m=nums2.size();
           int possiblePairs=n*m;
           k=min(k,possiblePairs);
        auto comp = [nums1,nums2](pair<int, int>&a, pair<int, int>&b) {
		return nums1[a.first] + nums2[a.second] > nums1[b.first] + nums2[b.second];
	   };
           priority_queue<pair<int,int>,vector<pair<int, int>>, decltype(comp)>p(comp);
         vector<vector<int>>kPairs;
        int j=k-1;
        p.push({0,0});
            
        while(k>0&&p.size())
        {
            int i=p.top().first,j=p.top().second;
            p.pop();
            kPairs.push_back({nums1[i],nums2[j]});
            if(i+1<n)
            p.push({i+1,j});
            if(i==0 && j+1 <m)
            p.push({i,j+1});
            k--;
        }
        return kPairs;
    }
